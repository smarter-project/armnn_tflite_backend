#
# Copyright Â© 2021 Arm Ltd. All rights reserved.
# SPDX-License-Identifier: MIT
#

#
# Multistage build.
#

ARG BASE_IMAGE=tritonserver
ARG ARMNN_TFLITE_BACKEND_IMAGE=armnn_tflite_backend
ARG BUILD_IMAGE=tritonserver_build
ARG TRITON_REPO_TAG=main
ARG TRITON_COMMON_REPO_TAG=${TRITON_REPO_TAG}
ARG TRITON_CORE_REPO_TAG=${TRITON_REPO_TAG}
ARG TRITON_THIRD_PARTY_REPO_TAG=${TRITON_REPO_TAG}
ARG TRITON_BACKEND_REPO_TAG=${TRITON_REPO_TAG}
ARG TRITON_ENABLE_MALI_GPU=OFF


############################################################################
## Build tests in the BUILD_IMAGE since it has already been configured
## correctly and has some existing build artifacts. Copy artifacts
## into QA area.
############################################################################
FROM ${BUILD_IMAGE} AS build

# Ensure apt-get won't prompt for selecting options
ENV DEBIAN_FRONTEND=noninteractive

# Build the client library and examples
ARG TRITON_REPO_TAG
ARG TRITON_COMMON_REPO_TAG
ARG TRITON_CORE_REPO_TAG
ARG TRITON_BACKEND_REPO_TAG
ARG TRITON_THIRD_PARTY_REPO_TAG
ARG TRITON_ENABLE_MALI_GPU

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    software-properties-common \
    autoconf \
    automake \
    build-essential \
    curl \
    git \
    libb64-dev \
    libopencv-dev \
    libopencv-core-dev \
    libssl-dev \
    libtool \
    pkg-config \
    python3 \
    python3-pip \
    python3-dev \
    rapidjson-dev \
    vim \
    wget \
    python3-pdfkit \
    maven \
    default-jdk && \
    pip3 install --upgrade wheel setuptools && \
    pip3 install --upgrade grpcio-tools && \
    pip3 install --upgrade pip

# Build the client repo
WORKDIR /workspace
RUN git clone --single-branch --depth=1 -b ${TRITON_REPO_TAG} https://github.com/triton-inference-server/client.git client
WORKDIR /workspace/build
RUN cmake -DCMAKE_INSTALL_PREFIX=/workspace/install \
    -DTRITON_VERSION=`cat /workspace/TRITON_VERSION` \
    -DTRITON_COMMON_REPO_TAG=${TRITON_COMMON_REPO_TAG} \
    -DTRITON_CORE_REPO_TAG=${TRITON_CORE_REPO_TAG} \
    -DTRITON_BACKEND_REPO_TAG=${TRITON_BACKEND_REPO_TAG} \
    -DTRITON_THIRD_PARTY_REPO_TAG=${TRITON_THIRD_PARTY_REPO_TAG} \
    -DTRITON_ENABLE_CC_HTTP=ON -DTRITON_ENABLE_CC_GRPC=ON \
    -DTRITON_ENABLE_PYTHON_HTTP=ON -DTRITON_ENABLE_PYTHON_GRPC=ON \
    -DTRITON_ENABLE_JAVA_HTTP=ON \
    -DTRITON_ENABLE_PERF_ANALYZER=ON \
    -DTRITON_ENABLE_EXAMPLES=ON -DTRITON_ENABLE_TESTS=ON \
    -DTRITON_ENABLE_GPU=OFF /workspace/client
RUN make -j$(nproc) cc-clients python-clients java-clients

WORKDIR /workspace
RUN cd install && \
    export VERSION=`cat /workspace/TRITON_VERSION` && \
    tar zcf /workspace/v$VERSION.clients.tar.gz *

# Install the dependencies needed to run the client examples. These
# are not needed for building but including them allows this image to
# be used to run the client examples.
RUN pip3 install --upgrade numpy pillow attrdict && \
    find install/python/ -maxdepth 1 -type f -name \
    "tritonclient-*linux*.whl" | xargs printf -- '%s[all]' | \
    xargs pip3 install --upgrade

# Populate the /workspace/qa directory
WORKDIR /workspace
RUN mkdir -p qa/clients && mkdir -p qa/pkgs && \
    cp -a install/bin/* qa/clients/. && \
    cp install/lib/libgrpcclient.so qa/clients/. && \
    cp install/lib/libhttpclient.so qa/clients/. && \
    cp install/python/*.py qa/clients/. && \
    cp install/python/triton*.whl qa/pkgs/. && \
    cp install/java/examples/*.jar qa/clients/.
RUN cp client/src/grpc_generated/go/*.go qa/L0_simple_go_client/. && \
    cp -r client/src/grpc_generated/java qa/L0_client_java/.


############################################################################
## Reference ArmNN TFLite image
############################################################################
FROM $ARMNN_TFLITE_BACKEND_IMAGE as armnn_tflite_backend

############################################################################
## Create CI enabled image
############################################################################
FROM $BASE_IMAGE

ARG TARGETPLATFORM

# Ensure apt-get won't prompt for selecting options
ENV DEBIAN_FRONTEND=noninteractive

# CI/QA for memcheck requires valgrind
# libarchive-dev is required by Python backend
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    libopencv-dev \
    libarchive-dev \
    libopencv-core-dev \
    libzmq3-dev \
    python3-dev \
    python3-pip \
    python3-protobuf \
    python3-setuptools \
    swig \
    nginx \
    libpng-dev \
    protobuf-compiler \
    g++ \
    maven \
    jq \
    valgrind && \
    rm -rf /var/lib/apt/lists/*

# CI/QA expects "python" executable (not python3).
RUN rm -f /usr/bin/python && \
    ln -s /usr/bin/python3 /usr/bin/python

RUN pip3 install --upgrade wheel setuptools && \
    pip3 install --upgrade numpy pillow attrdict future grpcio requests gsutil awscli six grpcio-channelz && \
    pip3 install --upgrade pytest pytest-xdist pytest-xprocess jinja2

# CI expects tests in /opt/tritonserver/qa. The triton-server (1000)
# user should own all artifacts in case CI is run using triton-server
# user.
WORKDIR /opt/tritonserver
COPY --chown=1000:1000 --from=build /workspace/qa/ qa/

# Copy in identity backend used in some qa tests
COPY --from=build /tmp/tritonbuild/identity/install/backends/identity /opt/tritonserver/backends/identity

# Copy in pytest files from the current repo
# These are the tests we use to validate the backend functionality
COPY qa/ qa/armnn_tflite_qa

# Remove CI tests that are meant to run only on build image and
# install the tritonserver/triton python client APIs.
RUN rm -fr qa/L0_copyrights qa/L0_build_variants && \
    find qa/pkgs/ -maxdepth 1 -type f -name \
    "tritonclient-*linux*.whl" | xargs printf -- '%s[all]' | \
    xargs pip3 install --upgrade

ENV LD_LIBRARY_PATH /opt/tritonserver/qa/clients:${LD_LIBRARY_PATH}

# Copy in the built armnn_tflite_backend
COPY --from=armnn_tflite_backend /opt/armnn_tflite_backend/build/install/backends/armnn_tflite /opt/tritonserver/backends/armnn_tflite

