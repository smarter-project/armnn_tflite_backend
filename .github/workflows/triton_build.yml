name: Triton Build and Push

on:
  schedule:
    - cron: "19 16 * * *"
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: [self-hosted, x86_64]
            arch: amd64
          - platform: [self-hosted, ARM64]
            arch: arm64
    runs-on: ${{ matrix.platform }}
    container:
      image: ubuntu:22.04
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: Install deps
        run: |
          apt update
          apt install -yqq --no-install-recommends \
            ca-certificates \
            curl \
            gnupg \
            lsb-release \
            python3-dev \
            python3-pip \
            git
          pip3 install docker

      - name: Install docker cli
        run: |
          mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt update
          apt install -yqq --no-install-recommends docker-ce-cli

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This job only pushes triton images for r22.X and beyond
      - name: Build and Push Triton
        shell: bash
        run: |
          rm -rf server || true
          git clone https://github.com/triton-inference-server/server 
          cd server
          readarray -d '' -t branches < <( git branch -r --list | grep -E 'r2[2-9]+\.[0-9]+$' | tr '\n' ' ')
          branches+=("origin/main")
          echo "Building for branches: ${branches[@]}"
          for branch in ${branches[@]}; do
            commit_sha=$(git rev-parse HEAD | cut -c 1-8)
            image_name=ghcr.io/smarter-project/armnn_tflite_backend/triton:${commit_sha}_${{ matrix.arch }}
            if docker manifest inspect $image_name; then
              echo "Image already found for $image_name"
            else
              git checkout $branch
              ./build.py --build-dir=/tmp/citritonbuild --enable-logging --enable-stats --enable-tracing --enable-metrics --endpoint=http --endpoint=grpc --backend=identity || \
                ./build.py --enable-logging --enable-stats --enable-tracing --enable-metrics --endpoint=http --endpoint=grpc --backend=identity
              docker tag tritonserver:latest $image_name
              branch_tag_name=$(echo $branch | sed 's/origin\///')_${{ matrix.arch }}
              docker tag tritonserver:latest ghcr.io/smarter-project/armnn_tflite_backend/triton:$branch_tag_name
              docker push $image_name
              docker push ghcr.io/smarter-project/armnn_tflite_backend/triton:$branch_tag_name
            fi
          done
